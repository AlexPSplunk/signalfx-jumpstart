resource "signalfx_detector" "pivotal_cloudfoundry_DREM_errors" {
  name         = "[SFx] Pivotal CloudFoundry Diego Route Emitter Metrics errors"
  description  = "Alerts for various Pivotal CloudFoundry Route Emitter Metrics related error scenarios"
  program_text = <<-EOF


from signalfx.detectors.against_periods import against_periods
from signalfx.detectors.against_recent import against_recent
from signalfx.detectors.not_reporting import not_reporting
from signalfx.detectors.countdown import countdown

TMP1 = data('route_emitter.RouteEmitterSyncDuration', filter=filter('metric_source', 'cloudfoundry'), rollup='max').max(over='15m').publish(label='TMP1', enable=False)
RouteEmitterSyncDuration = (TMP1/1000000000).publish(label='C', enable=False)
detect(when((RouteEmitterSyncDuration >= 5) and (RouteEmitterSyncDuration < 10))).publish('Pivotal Cloudfoundry - RouteEmitterSyncDuration between 5 and 10 seconds.')
detect(when(RouteEmitterSyncDuration >= 10)).publish('Pivotal Cloudfoundry - RouteEmitterSyncDuration greater or eaqual to 10 seconds.')


    EOF
  rule {
    detect_label = "Pivotal Cloudfoundry - RouteEmitterSyncDuration between 5 and 10 seconds."
    severity     = "Minor"
  }

rule {
    detect_label = "Pivotal Cloudfoundry - RouteEmitterSyncDuration greater or eaqual to 10 seconds."
    severity     = "Minor"
  }

}